// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

/*
Package cloud9_proto is a generated protocol buffer package.

It is generated from these files:
	model.proto

It has these top-level messages:
	Instant
	User
	Branch
	Commit
	Root
	File
*/
package cloud9_proto

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Instant struct {
	Seconds uint64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Nanos   uint32 `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
}

func (m *Instant) Reset()         { *m = Instant{} }
func (m *Instant) String() string { return proto.CompactTextString(m) }
func (*Instant) ProtoMessage()    {}

type User struct {
	Id       uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	FullName string `protobuf:"bytes,3,opt,name=full_name" json:"full_name,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

type Branch struct {
	Id      uint64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Commits []uint64 `protobuf:"varint,3,rep,name=commits" json:"commits,omitempty"`
}

func (m *Branch) Reset()         { *m = Branch{} }
func (m *Branch) String() string { return proto.CompactTextString(m) }
func (*Branch) ProtoMessage()    {}

type Commit struct {
	Id          uint64            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Root        uint64            `protobuf:"varint,2,opt,name=root" json:"root,omitempty"`
	User        uint64            `protobuf:"varint,3,opt,name=user" json:"user,omitempty"`
	At          *Instant          `protobuf:"bytes,4,opt,name=at" json:"at,omitempty"`
	Description string            `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Tags        map[string]string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}

func (m *Commit) GetAt() *Instant {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *Commit) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Root struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *Root) Reset()         { *m = Root{} }
func (m *Root) String() string { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()    {}

type File struct {
	Path        string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type" json:"content_type,omitempty"`
	Blob        uint64 `protobuf:"varint,3,opt,name=blob" json:"blob,omitempty"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}

func init() {
}
